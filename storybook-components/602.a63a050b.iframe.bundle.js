"use strict";(self.webpackChunk_baseapp_frontend_components=self.webpackChunk_baseapp_frontend_components||[]).push([[602],{"./modules/social/CommentsList/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_baseapp_frontend_design_system__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../design-system/index.ts"),_mui_material__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../../node_modules/@mui/material/Box/Box.js"),react_virtuoso__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("../../node_modules/react-virtuoso/dist/index.mjs"),_CommentItem__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./modules/social/CommentItem/index.tsx"),_constants__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./modules/social/constants.ts"),_graphql_queries_CommentsList__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./modules/social/graphql/queries/CommentsList.ts"),_graphql_subscriptions_CommentsSubscription__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./modules/social/graphql/subscriptions/CommentsSubscription.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var CommentsList=function CommentsList(_ref){var _target$comments2,targetRef=_ref.target,profileId=_ref.profileId,subscriptionsEnabled=_ref.subscriptionsEnabled,onReplyClick=_ref.onReplyClick,_ref$CommentItem=_ref.CommentItem,CommentItem=void 0===_ref$CommentItem?_CommentItem__WEBPACK_IMPORTED_MODULE_2__.A:_ref$CommentItem,CommentItemProps=_ref.CommentItemProps,VirtuosoProps=_ref.VirtuosoProps,_useCommentList=(0,_graphql_queries_CommentsList__WEBPACK_IMPORTED_MODULE_4__.V)(targetRef),target=_useCommentList.data,loadNext=_useCommentList.loadNext,isLoadingNext=_useCommentList.isLoadingNext,hasNext=_useCommentList.hasNext,comments=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((function(){var _target$comments;return(null==target||null===(_target$comments=target.comments)||void 0===_target$comments?void 0:_target$comments.edges.filter((function(edge){return null==edge?void 0:edge.node})).map((function(edge){return null==edge?void 0:edge.node})))||[]}),[null==target||null===(_target$comments2=target.comments)||void 0===_target$comments2?void 0:_target$comments2.edges]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.Fragment,{children:[subscriptionsEnabled&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_graphql_subscriptions_CommentsSubscription__WEBPACK_IMPORTED_MODULE_5__.Ay,{targetObjectId:target.id}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)("div",{className:"overflow-x-auto hide-scrollbar",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(react_virtuoso__WEBPACK_IMPORTED_MODULE_8__.aY,_objectSpread({useWindowScroll:!0,data:comments,overscan:_constants__WEBPACK_IMPORTED_MODULE_3__.aF,itemContent:function itemContent(_index,comment){return function renderCommentItem(comment){return comment?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(CommentItem,_objectSpread({target,comment,profileId,currentThreadDepth:1,subscriptionsEnabled,onReplyClick},CommentItemProps),"comment-".concat(comment.id)):null}(comment)},components:{Header:function renderHeader(){return 0===comments.length?null:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)("div",{className:"h-2"})},Footer:function renderLoadingState(){return isLoadingNext?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_baseapp_frontend_design_system__WEBPACK_IMPORTED_MODULE_1__.Gu,{sx:{paddingTop:3,paddingBottom:1},CircularProgressProps:{size:15},"aria-label":"loading more comments"}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_mui_material__WEBPACK_IMPORTED_MODULE_7__.A,{sx:{paddingTop:3}})}},endReached:function endReached(){hasNext&&loadNext(_constants__WEBPACK_IMPORTED_MODULE_3__.aF)}},VirtuosoProps))})]})};const __WEBPACK_DEFAULT_EXPORT__=CommentsList;CommentsList.__docgenInfo={description:"",methods:[],displayName:"CommentsList",props:{target:{required:!0,tsType:{name:"signature",type:"object",raw:"{\n  readonly ' $data'?: CommentsList_comments$data\n  readonly ' $fragmentSpreads': FragmentRefs<'CommentsList_comments'>\n}",signature:{properties:[{key:" $data",value:{name:"signature",type:"object",raw:"{\n  readonly comments:\n    | {\n        readonly edges: ReadonlyArray<\n          | {\n              readonly node:\n                | {\n                    readonly id: string\n                    readonly isPinned: boolean\n                    readonly ' $fragmentSpreads': FragmentRefs<'CommentItem_comment'>\n                  }\n                | null\n                | undefined\n            }\n          | null\n          | undefined\n        >\n        readonly pageInfo: {\n          readonly endCursor: string | null | undefined\n          readonly hasNextPage: boolean\n        }\n      }\n    | null\n    | undefined\n  readonly commentsCount: {\n    readonly total: number | null | undefined\n  }\n  readonly id: string\n  readonly ' $fragmentSpreads': FragmentRefs<'CommentItem_target'>\n  readonly ' $fragmentType': 'CommentsList_comments'\n}",signature:{properties:[{key:"comments",value:{name:"union",raw:"| {\n    readonly edges: ReadonlyArray<\n      | {\n          readonly node:\n            | {\n                readonly id: string\n                readonly isPinned: boolean\n                readonly ' $fragmentSpreads': FragmentRefs<'CommentItem_comment'>\n              }\n            | null\n            | undefined\n        }\n      | null\n      | undefined\n    >\n    readonly pageInfo: {\n      readonly endCursor: string | null | undefined\n      readonly hasNextPage: boolean\n    }\n  }\n| null\n| undefined",elements:[{name:"signature",type:"object",raw:"{\n  readonly edges: ReadonlyArray<\n    | {\n        readonly node:\n          | {\n              readonly id: string\n              readonly isPinned: boolean\n              readonly ' $fragmentSpreads': FragmentRefs<'CommentItem_comment'>\n            }\n          | null\n          | undefined\n      }\n    | null\n    | undefined\n  >\n  readonly pageInfo: {\n    readonly endCursor: string | null | undefined\n    readonly hasNextPage: boolean\n  }\n}",signature:{properties:[{key:"edges",value:{name:"ReadonlyArray",elements:[{name:"union",raw:"| {\n    readonly node:\n      | {\n          readonly id: string\n          readonly isPinned: boolean\n          readonly ' $fragmentSpreads': FragmentRefs<'CommentItem_comment'>\n        }\n      | null\n      | undefined\n  }\n| null\n| undefined",elements:[{name:"signature",type:"object",raw:"{\n  readonly node:\n    | {\n        readonly id: string\n        readonly isPinned: boolean\n        readonly ' $fragmentSpreads': FragmentRefs<'CommentItem_comment'>\n      }\n    | null\n    | undefined\n}",signature:{properties:[{key:"node",value:{name:"union",raw:"| {\n    readonly id: string\n    readonly isPinned: boolean\n    readonly ' $fragmentSpreads': FragmentRefs<'CommentItem_comment'>\n  }\n| null\n| undefined",elements:[{name:"signature",type:"object",raw:"{\n  readonly id: string\n  readonly isPinned: boolean\n  readonly ' $fragmentSpreads': FragmentRefs<'CommentItem_comment'>\n}",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"isPinned",value:{name:"boolean",required:!0}},{key:" $fragmentSpreads",value:{name:"FragmentRefs",elements:[{name:"literal",value:"'CommentItem_comment'"}],raw:"FragmentRefs<'CommentItem_comment'>",required:!0}}]}},{name:"null"},{name:"undefined"}],required:!0}}]}},{name:"null"},{name:"undefined"}]}],raw:"ReadonlyArray<\n  | {\n      readonly node:\n        | {\n            readonly id: string\n            readonly isPinned: boolean\n            readonly ' $fragmentSpreads': FragmentRefs<'CommentItem_comment'>\n          }\n        | null\n        | undefined\n    }\n  | null\n  | undefined\n>",required:!0}},{key:"pageInfo",value:{name:"signature",type:"object",raw:"{\n  readonly endCursor: string | null | undefined\n  readonly hasNextPage: boolean\n}",signature:{properties:[{key:"endCursor",value:{name:"union",raw:"string | null | undefined",elements:[{name:"string"},{name:"null"},{name:"undefined"}],required:!0}},{key:"hasNextPage",value:{name:"boolean",required:!0}}]},required:!0}}]}},{name:"null"},{name:"undefined"}],required:!0}},{key:"commentsCount",value:{name:"signature",type:"object",raw:"{\n  readonly total: number | null | undefined\n}",signature:{properties:[{key:"total",value:{name:"union",raw:"number | null | undefined",elements:[{name:"number"},{name:"null"},{name:"undefined"}],required:!0}}]},required:!0}},{key:"id",value:{name:"string",required:!0}},{key:" $fragmentSpreads",value:{name:"FragmentRefs",elements:[{name:"literal",value:"'CommentItem_target'"}],raw:"FragmentRefs<'CommentItem_target'>",required:!0}},{key:" $fragmentType",value:{name:"literal",value:"'CommentsList_comments'",required:!0}}]},required:!1}},{key:" $fragmentSpreads",value:{name:"FragmentRefs",elements:[{name:"literal",value:"'CommentsList_comments'"}],raw:"FragmentRefs<'CommentsList_comments'>",required:!0}}]}},description:""},profileId:{required:!1,tsType:{name:"string"},description:""},subscriptionsEnabled:{required:!0,tsType:{name:"boolean"},description:""},onReplyClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},CommentItem:{required:!1,tsType:{name:"FC",elements:[{name:"CommentItemProps"}],raw:"FC<CommentItemProps>"},description:"",defaultValue:{value:"({\n  comment: commentRef,\n  profileId,\n  currentThreadDepth,\n  subscriptionsEnabled,\n  onReplyClick,\n  CommentUpdateProps,\n  CommentsRepliesProps,\n  CommentOptionsProps,\n  enableDelete = true,\n  Timestamp = DefaultTimestamp,\n  CommentUpdate = DefaultCommentUpdate,\n  CommentReplyButton = DefaultCommentReplyButton,\n  CommentPinnedBadge = DefaultCommentPinnedBadge,\n  CommentReactionButton = DefaultCommentReactionButton,\n}) => {\n  const [comment, refetchCommentItem] = useRefetchableFragment<\n    CommentItemRefetchQuery,\n    CommentItem_comment$key\n  >(CommentItemFragmentQuery, commentRef)\n  const { setCommentReply } = useCommentReply()\n  const commentItemRef = useRef<HTMLDivElement>(null)\n\n  const [isHoveringComment, setIsHoveringComment] = useState(false)\n  const [isEditMode, setIsEditMode] = useState(false)\n  const [isRepliesExpanded, setIsReplyRepliesExpanded] = useState(false)\n\n  const [longPressHandler, setLongPressHandler] = useState<LongPressHandler>({\n    isLongPressingComment: false,\n    shouldOpenCommentOptions: false,\n  })\n\n  const longPressHandlers = useLongPress<HTMLDivElement>(\n    () => setLongPressHandler({ isLongPressingComment: true, shouldOpenCommentOptions: true }),\n    {\n      onCancel: (e, { reason }) => {\n        // This is a workaround to prevent the comment options's drawer from closing when the user clicks on the drawer's content.\n        // Ideally, we would call setLongPressHandler({ isLongPressingComment: false }) on `onFinished` instead of `onCancel`.\n        // But, on mobile google chrome devices, the long press click is being wrongly propagated to the backdrop and closing the comment options's drawer right after it opens.\n        const className = (e?.target as HTMLElement)?.className || ''\n        const classNameString = typeof className === 'string' ? className : ''\n        const isClickOnBackdrop = classNameString.includes('MuiBackdrop')\n        if (reason === LongPressCallbackReason.CancelledByRelease && isClickOnBackdrop) {\n          setLongPressHandler((prevState) => ({ ...prevState, isLongPressingComment: false }))\n        }\n      },\n      cancelOutsideElement: true,\n      threshold: 400,\n    },\n  )\n  const handleLongPressCommentOptionsClose = () => {\n    setLongPressHandler({ isLongPressingComment: false, shouldOpenCommentOptions: false })\n  }\n\n  const defaultCommentOptions = useCommentOptions({\n    comment,\n    onLongPressLeave: handleLongPressCommentOptionsClose,\n    onEdit: () => setIsEditMode(true),\n  })\n\n  const [isLoadingReplies, startLoadingReplies] = useTransition()\n\n  const showReplies = () => {\n    if (isRepliesExpanded) return\n\n    startLoadingReplies(() => {\n      refetchCommentItem(\n        { isRepliesExpanded: true },\n        {\n          fetchPolicy: 'store-or-network',\n          onComplete: (error) => {\n            if (error) {\n              console.error(error)\n            } else {\n              setIsReplyRepliesExpanded(true)\n            }\n          },\n        },\n      )\n    })\n  }\n\n  const replyToComment = () => {\n    onReplyClick?.()\n    setCommentReply({\n      commentItemRef,\n      inReplyToId: comment.id,\n      name: comment.user?.fullName,\n    })\n    showReplies()\n  }\n\n  const renderCommentContent = () => {\n    if (isEditMode)\n      return (\n        <CommentUpdate\n          comment={comment}\n          onCancel={() => setIsEditMode(false)}\n          {...CommentUpdateProps}\n        />\n      )\n\n    return (\n      <Typography\n        variant=\"body2\"\n        sx={{\n          whiteSpace: 'pre-wrap',\n          wordBreak: 'normal',\n          overflowWrap: 'anywhere',\n        }}\n      >\n        {comment.body}\n      </Typography>\n    )\n  }\n\n  if (!comment) {\n    return null\n  }\n\n  const { options = defaultCommentOptions, ...restOfCommentOptionsProps } =\n    CommentOptionsProps ?? {}\n\n  return (\n    <div>\n      <CommentContainerWrapper currentThreadDepth={currentThreadDepth}>\n        <CommentContainer\n          ref={commentItemRef}\n          onMouseEnter={() => setIsHoveringComment(true)}\n          onMouseLeave={() => setIsHoveringComment(false)}\n          {...longPressHandlers()}\n        >\n          <CommentOptions\n            comment={comment}\n            options={options}\n            isHoveringComment={isHoveringComment}\n            onLongPressLeave={handleLongPressCommentOptionsClose}\n            longPressHandler={longPressHandler}\n            enableDelete={enableDelete}\n            {...restOfCommentOptionsProps}\n          />\n          <AvatarWithPlaceholder\n            width={40}\n            height={40}\n            alt={comment.user?.fullName ?? `Comment's user avatar`}\n            src={comment.user?.avatar?.url}\n          />\n          <div className=\"grid gap-3\">\n            <div className=\"grid grid-cols-1 justify-start\">\n              <div className=\"grid grid-cols-[repeat(2,max-content)] items-center gap-2\">\n                <Typography variant=\"subtitle2\">{comment.user?.fullName}</Typography>\n                <CommentPinnedBadge isPinned={comment.isPinned} />\n              </div>\n              {renderCommentContent()}\n            </div>\n            <div className=\"flex justify-between\">\n              <div className=\"grid grid-cols-[repeat(2,max-content)] gap-4\">\n                <CommentReactionButton target={comment} />\n                <CommentReplyButton\n                  onReply={replyToComment}\n                  isLoadingReplies={isLoadingReplies}\n                  commentId={comment.id}\n                  totalCommentsCount={comment.commentsCount.total}\n                />\n              </div>\n              <Timestamp date={comment.created} />\n            </div>\n          </div>\n        </CommentContainer>\n      </CommentContainerWrapper>\n      {isRepliesExpanded && !isLoadingReplies && (\n        <CommentsReplies\n          key={`replies-of-${comment.id}`}\n          target={comment}\n          profileId={profileId}\n          currentThreadDepth={currentThreadDepth + 1}\n          subscriptionsEnabled={subscriptionsEnabled}\n          onReplyClick={onReplyClick}\n          CommentItem={CommentItem}\n          {...CommentsRepliesProps}\n        />\n      )}\n    </div>\n  )\n}",computed:!1}},CommentItemProps:{required:!1,tsType:{name:"Partial",elements:[{name:"CommentItemProps"}],raw:"Partial<CommentItemProps>"},description:""},VirtuosoProps:{required:!1,tsType:{name:"Partial",elements:[{name:"VirtuosoProps",elements:[{name:"any"},{name:"any"}],raw:"VirtuosoProps<any, any>"}],raw:"Partial<VirtuosoProps<any, any>>"},description:""}}}}}]);